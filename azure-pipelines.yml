# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  testProject: ./AzureDevOpsTest/AzureDevOpsTest.csproj
  applicationProject: ./AzureDevOpsApp/AzureDevOpsApp.csproj
  system.debug: true


jobs:
- job: Build
  steps:
  - task: UseDotNet@2
    inputs:
      version: '3.1.x'
      packageType: sdk

  - script: |
      echo "Restrieving external libraries..."
      dotnet restore
    displayName: 'Resolve Dependencies'

  - script: |
      echo "Building projects..."
      dotnet build --configuration $(buildConfiguration)
    displayName: 'Build Source'

  - script: |
      echo "Running tests..."
      dotnet test $(testProject)
    displayName: 'Execute Tests'

  - script: |
      echo "Creating final application package..."
      dotnet publish $(applicationProject) -o ./publish --configuration $(buildConfiguration)
      echo ls ./publish
      ls ./publish
    displayName: 'Package Final Application'

  #- task: AzureFileCopy@4
  #  inputs:
  #    SourcePath: './publish'
  #    azureSubscription: 'PA-mkillens(cbe78075-3e2d-46ff-8124-83170bbf23e7)'
  #    Destination: 'AzureBlob'
  #    storage: 'stemcellassests'
  #    ContainerName: 'assets'
  #    BlobPrefix: 'ADOBuild'

  - task: CopyFiles@2
    inputs:
      contents: publish/**
      targetFolder: $(Build.ArtifactStagingDirectory)
      CleanTargetFolder: true
    displayName: 'Stage Application Package'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: ADOBuildOutpot
    displayName: 'Publish Build Package'

- job:
  dependsOn: Build
  condition: succeeded('Build')
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'ADOBuildOutpot'
      downloadPath: '$(System.ArtifactsDirectory)'

  - task: CloudFoundryCLIInstall@0
    inputs:
      cfVersion: '6.43.0'

  - task: CloudFoundry@1
    inputs:
      cfEndpoint: 'PCF One'
      org: 'pivot-mkillens'
      space: 'tgen'
      deploymentOptions: 'manifest'
      cfManifest: './manifest.yml'
      createServices: false
      bindServices: false

  